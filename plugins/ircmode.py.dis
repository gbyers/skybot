from util import hook
import time, commands, re

perms = {}

perms["nathan@servequake/staff/netadmin/nathan"] = 101
perms["cups@unaffiliated/cups"] = 101
perms["cuppy@unaffiliated/cups"] = 101
perms["nathan@F86D1CB7.E7072F54.A84B1A07.IP"] = 101
perms["nathan@nathan.pond.sx"] = 101

users = []
channels = {}

def getPerms(input):
    user = input.nick+"@"+input.host
    if perms.has_key(user):
        return perms[user]
    else:
        return 0

@hook.command(autohelp=False)
def getop(inp, input=None, conn=None):
    "getop -- gets op in channel"
    if getPerms(input) == 101:
        conn.cmd("MODE %s +o %s"%(input.chan,conn.nick))
        conn.cmd("PRIVMSG ChanServ :OP %s"%input.chan)

@hook.command("sh")
def runshell(inp, input=None, say=None):
    "runshell/sh [code] -- runs code in a shell. Needs 101 permission"
    if getPerms(input) == 101:
        output = commands.getoutput(inp)
        if output:
            output = output.split("\n")
            for line in output: say(line.decode('utf8','ignore'))
        else: return 0

@hook.event('352')
def event_352(inp, conn=None, say=None, db=None):
    me, chan, ident, host, server, nick, status, info = inp
    jtime = int(time.time())
    #print me,chan,ident,host,server,nick
    if nick.lower() not in users: users.append(nick.lower())
    if not channels.has_key(chan.lower()):
        channels[chan.lower()] = {}
    channels[chan.lower()][nick.lower()] = {"nick":nick,"ident":ident,"host":host,"chan":chan,"status":status,"jtime":jtime}

@hook.command
def checkban(inp, input=None, say=None):
    "checkban [nick!ident@host] -- checks how many people will be banned in current channel"
    if getPerms(input) >= 50:
        c = 0
        willbeaffected = []
        for nick in channels[input.chan.lower()]:
            fullhost = "%s!%s@%s"%(channels[input.chan.lower()][nick]["nick"],channels[input.chan.lower()][nick]["ident"],channels[input.chan.lower()][nick]["host"])
            m =  re.match(inp.replace("*","(.*?)"),fullhost)
            if m:
                c=c+1
                willbeaffected.append(channels[input.chan.lower()][nick]["nick"])
        if c == 0: say("Nobody will be affected.")
        elif c == 1:
            say("1 user will be affected.")
            say("; ".join(willbeaffected))
        else:
            say("%s users will be affected."%str(c))
            say("; ".join(willbeaffected))

@hook.command(autohelp=False)
def cycle(inp, input=None, conn=None):
    "cycle [<channel>] -- cycles active channel or channel"
    if getPerms(input) == 101:
        if inp:
                conn.cmd("PART %s"%inp)
                conn.cmd("JOIN %s"%inp)
        else:
            conn.cmd("PART %s"%input.chan)
            conn.cmd("JOIN %s"%input.chan)

@hook.command
def say(inp, say=None, input=None):
    if getPerms(input) == 101:
        say(inp)

@hook.command
def do(inp, conn=None, input=None):
    if getPerms(input) == 101:
        conn.cmd(inp)

@hook.command
def action(inp, conn=None, input=None):
    if getPerms(input) >= 10:
        conn.cmd("PRIVMSG %s :\001ACTION %s\001"%(input.chan,inp))

@hook.command
def permissions(inp, input=None, say=None):
    "permissions [nick@host] [level] -- adds nick@host> at level to permissions"
    if inp.count(" ") == 1 and getPerms(input) == 101:
        user = inp.split(" ")[0]
        level = inp.split(" ")[1]
        try:
            level = int(inp.split(" ")[1])
        except:
            return ("level is not a number")
        if "@" in user:
            perms[user] = level
            return ("perms[\"%s\"] = %s"%(user,level))
        else:
            return ("must be in format of nick@host")
    elif inp.count(" ") == 0 and getPerms(input) >= 50:
        if perms.has_key(inp):
            return ("perms[\"%s\"] = %s"%(inp,perms[inp]))

@hook.command
def mode(inp, input=None, conn=None, say=None):
    "mode [channel/nick] [modes] -- sets modes on channel or self"
    if getPerms(input) >= 60:
        if inp: conn.cmd("MODE %s"%(inp))

@hook.command(autohelp=False)
def op(inp, input=None, conn=None, say=None):
    "op [<nick>] -- gives op to nick on active channel or self"
    if getPerms(input) >= 50:
        if inp:
            conn.cmd("MODE %s +oooo %s"%(input.chan,inp))
        else:
            conn.cmd("MODE %s +o %s"%(input.chan,input.nick))

@hook.command(autohelp=False)
def deop(inp, input=None, conn=None):
    "deop [<nick>] -- takes op from nick on active channel or self"
    if getPerms(input) >= 50:
        if inp:
            conn.cmd("MODE %s -oooo %s"%(input.chan,inp))
        else:
            conn.cmd("MODE %s -o %s"%(input.chan,input.nick))

@hook.command(autohelp=False)
def voice(inp, input=None, conn=None, say=None):
    "voice [<nick>] -- gives voice to nick on active channel or self"
    if getPerms(input) >= 50:
        if inp:
            conn.cmd("MODE %s +vvvv %s"%(input.chan,inp))
        else:
            conn.cmd("MODE %s +v %s"%(input.chan,input.nick))

@hook.command(autohelp=False)
def devoice(inp, input=None, conn=None, say=None):
    "devoice [<nick>] -- takes voice to nick on active channel or self"
    if getPerms(input) >= 50:
        if inp:
            conn.cmd("MODE %s -vvvv %s"%(input.chan,inp))
        else:
            conn.cmd("MODE %s -v %s"%(input.chan,input.nick))

@hook.command(autohelp=False)
def kick(inp, conn=None, input=None):
    "kick [nick] [<reason>] -- kicks nick with a reason from the current channel"
    if getPerms(input) >= 50:
        if inp:
            if inp.count(" ") != 0:
                reason = inp.split(" ",1)[1]
            else:
                reason = ""
            conn.cmd("KICK %s %s :%s"%(input.chan,inp.split(" ")[0],reason))

@hook.command
def quiet(inp, input=None, conn=None):
    "quiet [nick] -- quiets nick in current channel"
    user = inp
    if user.lower() in users and getPerms(input) > 50:
        if channels[input.chan].has_key(user.lower()):
            mask = "*!"+channels[input.chan][user.lower()]["ident"]+"@"+channels[input.chan][user.lower()]["host"]
            conn.send("MODE %s +q %s"%(input.chan,mask))
        else:
            conn.send("MODE %s +q %s"%(input.chan,user))
    elif getPerms(input) > 50:
        conn.send("MODE %s +q %s"%(input.chan,user))

@hook.command
def unquiet(inp, input=None, conn=None):
    "unquiet [nick] -- unquiets [nick] in current channel"
    user = inp
    if user.lower() in users and getPerms(input) > 50:
        if channels[input.chan].has_key(user.lower()):
            mask = "*!"+channels[input.chan][user.lower()]["ident"]+"@"+channels[input.chan][user.lower()]["host"]
            conn.send("MODE %s -q %s"%(input.chan,mask))
        else:
            conn.send("MODE %s -q %s"%(input.chan,user))
    elif getPerms(input) > 50:
        conn.send("MODE %s -q %s"%(input.chan,user))

autoOpNicks = ["chintu","nathan","ducky","google","nathan_"]
autoOpChans = ["#"]
@hook.event('JOIN')
def doJoin(inp, input=None, conn=None):
    conn.cmd("WHO %s"%input.chan)
    if input.nick.lower() in autoOpNicks and input.chan.lower() in autoOpChans:
        conn.cmd("MODE %s +o %s"%(input.chan,input.nick))

@hook.command
def ban(inp, conn=None, input=None):
    "ban [user/host] -- sets a ban for the user/host"
    if inp.count(" ") > 1:
        user = inp.split(" ")[0]
    else:
        user = inp
    if user.lower() in users and getPerms(input) > 50:
        if channels[input.chan].has_key(user.lower()):
            mask = "*!"+channels[input.chan][user.lower()]["ident"]+"@"+channels[input.chan][user.lower()]["host"]
            conn.send("MODE %s +b %s"%(input.chan,mask))
        else:
            conn.send("MODE %s +b %s"%(input.chan,user))
    elif getPerms(input) > 50:
        conn.send("MODE %s +b %s"%(input.chan,user))

@hook.command
def unban(inp, conn=None, input=None):
    "ban [user/host] -- removes a ban for the user/host"
    user = inp
    if user.lower() in users and getPerms(input) > 50:
        if channels[input.chan].has_key(user.lower()):
            mask = "*!"+channels[input.chan][user.lower()]["ident"]+"@"+channels[input.chan][user.lower()]["host"]
            conn.send("MODE %s -b %s"%(input.chan,mask))
        else:
            conn.send("MODE %s -b %s"%(input.chan,user))
    elif getPerms(input) > 50:
        conn.send("MODE %s -b %s"%(input.chan,user))

@hook.command('kban')
@hook.command('kb')
@hook.command
def kickban(inp, conn=None, input=None):
    "kickban/kban/kb [nick] [reason] -- kicks and bans a nick from the channel"
    ban(inp,conn,input)
    kick(inp,conn,input)

@hook.command
def remove(inp, conn=None, input=None):
    "remove <nick> [reason] -- removes the nick from the channel instead of kicking"
    if getPerms(input) >= 50:
        if inp.count(" ") >= 1:
            nick = inp.split(" ")[0]
            reason = inp.split(" ",1)[1]
        else:
            nick = inp
            reason = input.nick
        conn.send("REMOVE %s %s :%s"%(input.chan,nick,reason))
